[alias]
	; mnemonic for add
	a = add
	; mnemonic for add all
	aa = add .

	; show git aliases
	aliases = config --get-regexp alias

	amend = commit --amend

	; mnemonic for branches
	b = branch
	bl = branch --list
	branches = branch --list

	; mnemonic for browse
	br = browse

	; mnemonic for commit
	c = commit
	cnv = commit --no-verify

	; mnemonic for checkout
	co = checkout

	cl = clone --recurse-submodules

	; mnemonic for diff
	d = diff

	; mnemonic for diff all
	da = diff HEAD

	; mnemonic for diff staged
	ds = diff --cached

	; mnemonic for diff master...
	dm = diff master...

	dw = diff --word-diff

	; Properly handles mistypes like `git git diff`; etc
	git = !git

	; Switch to a branch, creating it if necessary
	go = "!f() { git checkout -b \"$1\" 2> /dev/null || git checkout \"$1\"; }; f"

	ic = icdiff

	; Use git ignore-io from git-extras
	; ; Add an ignore file from gitignore.io; use something like `git ignore go`
	; ignore = "!gi() { curl -L -s https://www.gitignore.io/api/$@ ;}; gi"

	; Prettier logging
	l = log --oneline
	lg = log --oneline --graph --decorate
	lga = log --oneline --graph --decorate --all
	; only show me what is not pushed yet
	top = log --oneline --graph --decorate @{u}..
	; only show me what is not merged from remote yet
	new = log --oneline --graph --decorate ..@{u}

	last = log -1 HEAD

	; mnemonic for mergetool
	mt = mergetool

	; mnemonic for pull
	p = pull

	; Pushes and sets up tracking to same named branch
	pu = push -u

	s = status -s
	st = status -sb

	; For showing stashes
	sl = stash list
	stashes = stash list
	; stash show
	ss = "!f() { git stash show stash^{/$*} -p; }; f"
	; stash apply
	sa = "!f() { git stash apply stash^{/$*}; }; f"

	; Show submodules when I add the s
	submodules = submodule

	; mnemonic for submodule
	su = submodule

	; To unstage files, etc
	us = reset -q HEAD --
	unstage = reset -q HEAD --

[color]
	ui = auto
	diff = auto
	status = auto
	branch = auto
	interactive = auto
	grep = auto

[commit]
	; gpgsign = true
	verbose = true

[core]
	excludesfile = ~/.gitignore
	; This will use $EDITOR
	; Note that $GIT_EDITOR and $VISUAL take precedence, if set
	; editor = vim
	untrackedCache = true

[credential]
	helper = osxkeychain

[diff]
	tool = vimdiff
	algorithm = patience

[difftool]
	; prompt = false

[github]
	user = svanburen

[hub]
	protocol = ssh

[icdiff]
	options = --highlight --line-numbers

[include]
	path = ~/.gitconfig.local

[init]
	; templatedir = ~/.git_template

[merge]
	tool = nvim
	ff = false
	; prompt = false
	; not super useful for me
	; conflictStyle = diff3

[mergetool "nvim"]
	; https://www.grzegorowski.com/using-vim-or-neovim-nvim-as-a-git-mergetool/
	cmd = nvim -f -c \"Gdiff\" \"$MERGED\"

[pull]
	ff = true

[push]
	default = current

[user]
	name = Stefan VanBuren
	email = vanburenstefan@gmail.com
[protocol]
	version = 2

; vim: set noexpandtab:
