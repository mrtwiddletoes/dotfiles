; vim: set noexpandtab filetype=gitconfig:

[user]
	name = Stefan VanBuren
	email = me@svbn.me

[github]
	user = svanburen

[alias]
	; mnemonic for add
	a = add
	; mnemonic for add all
	aa = add .

	; mnemonic for branches
	b = branch

	; mnemonic for browse
	br = !hub browse

	; mnemonic for commit
	c = commit
	cnv = commit --no-verify

	; mnemonic for checkout
	co = checkout

	; mnemonic for diff
	d = diff

	; mnemonic for diff all
	da = diff HEAD

	; mnemonic for diff staged
	ds = diff --cached

	; oneline log
	lg = log --oneline
	; use Fugitive's :Git log
	l = !nvim -c \"Git log\" +only

	; mnemonic for mergetool
	mt = mergetool

	; mnemonic for pull
	p = pull
	pa = pull --autostash

	; Pushes and sets up tracking to same named branch
	pu = push -u
	; Safer version of push --force
	pf = push --force-with-lease

	; mnemonic aliases for rebasing
	rc = rebase --continue
	ri = rebase --interactive

	# short status
	st = status --short

	; For showing stashes
	stashes = stash list

	# list files which have changed since REVIEW_BASE
	files = !git diff --name-only $(git merge-base HEAD \"$REVIEW_BASE\")

        # Same as above, but with a diff stat instead of just names
        # (better for interactive use)
	stat = !git diff --stat $(git merge-base HEAD \"$REVIEW_BASE\")

        # Open all files changed since REVIEW_BASE in Vim tabs
        # Then, run fugitive's :Gdiff in each tab, and finally
        # tell vim-gitgutter to show +/- for changes since REVIEW_BASE
        review = !nvim -p $(git files) +\"tabdo Gdiffsplit $REVIEW_BASE\" +\"let g:gitgutter_diff_base = '$REVIEW_BASE'\"

	; mnemonic for submodule
	su = submodule

	; To unstage files, etc
	unstage = reset -q HEAD --

[commit]
	; At the bottom of the commit message, show a diff of the commit.
	verbose = true

[core]
	; brew install git-delta
	pager = delta --light
	editor = nvim

[credential]
	; use the keychain for git credentials
	helper = osxkeychain

[diff]
	; uses mnemonic prefixes rather than the typical "a/" and "b/" shown.
	mnemonicPrefix = true

[init]
	; initialize repositories with "main" as the default branch
	defaultBranch = main

[push]
	; push to the branch with the same name by default
	default = current

[pull]
	; prefer rebasing when pulling from remote, rather than merging
	rebase = true

[merge]
	tool = fugitive

[mergetool]
	; remove all .orig files when using the mergetool
	keepBackup = false

[mergetool "fugitive"]
	; open neovim and invoke :Git mergetool
	cmd = nvim -c \"Git mergetool\"

[rebase]
	autosquash = true

[sendemail]
	smtpserver = smtp.migadu.com
	smtpuser = me@svbn.me
	; NOT tls, even if this is what should be used
	smtpencryption = ssl
	smtpserverport = 465

	; always open an editor when using sendemail
	annotate = yes

[interactive]
	diffFilter = delta --color-only

[delta]
	side-by-side = true
